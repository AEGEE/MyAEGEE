################################################################
# Global configuration
################################################################
logLevel = "INFO"

defaultEntryPoints = ["http", "https"]

[entryPoints]
  [entryPoints.http]
  address = ":80"
     [entryPoints.http.redirect]
     entryPoint = "https"
  [entryPoints.https]
  address = ":443"
    [entryPoints.https.tls]
      minVersion = "VersionTLS12"
      cipherSuites = ["TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256","TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"]
      [[entryPoints.https.tls.certificates]]
        certFile = "/etc/ssl/mkcert/cert.pem"
        keyFile = "/etc/ssl/mkcert/key.pem"


################################################################
# Web configuration backend
################################################################
[web]
address = ":8080"

[accessLog]
filePath = "/var/log/traefik/traefik-access.log"

################################################################
# Docker configuration backend
################################################################

# Enable Docker configuration backend
#
# Optional
#
[docker]

# Docker server endpoint. Can be a tcp or a unix socket endpoint.
#
# Required
#
endpoint = "unix:///var/run/docker.sock"

# Default domain used.
# Can be overridden by setting the "traefik.domain" label on a container.
#
# Required
#
domain = "${BASE_URL}"


# Enable watch docker changes
#
# Optional
#
watch = true

# Override default configuration template. For advanced users :)
#
# Optional
#
# filename = "docker.tmpl"

# Expose containers by default in traefik
# If set to false, containers that don't have `traefik.enable=true` will be ignored
#
# Optional
# Default: true
#
exposedbydefault = false

# Use the IP address from the binded port instead of the inner network one. For specific use-case :)

#
# Optional
# Default: false
#
usebindportip = true
# Use Swarm Mode services as data provider
#
# Optional
# Default: false
#
swarmmode = false


# Enable docker TLS connection
#
#  [docker.tls]
#  ca = "/etc/ssl/ca.crt"
#  cert = "/etc/ssl/docker.crt"
#  key = "/etc/ssl/docker.key"
#  insecureskipverify = true


# CORS proxy pass for MyAEGEE confluence, Google calendar and Dockerhub
[file]
[frontends]
  [frontends.jira-cors-frontend]
  backend = "jira-cors-backend"
  priority = 20
  [frontends.jira-cors-frontend.routes.main]
    rule = "PathPrefixStrip:/services/jira-cors/;"

  [frontends.calendar-cors-frontend]
  backend = "calendar-cors-backend"
  priority = 20
  [frontends.calendar-cors-frontend.routes.main]
    rule = "PathPrefixStrip:/services/calendar-cors/;"

  [frontends.dockerhub-frontend]
  backend = "dockerhub-backend"
  priority = 20
  [frontends.dockerhub-frontend.routes.main]
    rule = "PathPrefixStrip:/services/dockerhub/;"

[backends]
  [backends.jira-cors-backend]
    [backends.jira-cors-backend.servers.server1]
    url = "https://myaegee.atlassian.net/"

  [backends.calendar-cors-backend]
    [backends.calendar-cors-backend.servers.server1]
    url = "https://calendar.google.com/"

  [backends.dockerhub-backend]
    [backends.dockerhub-backend.servers.server1]
    url = "https://hub.docker.com"

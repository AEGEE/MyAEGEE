version: '2'

services:

### OMS TUNNEL        #######################################
### Proxy container #######################################

    traefik:
        image: aegee/traefik:dev
        ports:
            - "80:80"
            - "8080:8080"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik/traefik.toml:/etc/traefik/traefik.toml

### service registry #######################################

    omsserviceregistry:
        image: aegee/omsserviceregistry:dev
        ports:
            - "7000:7000"
        volumes:
            - ./docker-compose.yml:/usr/src/docker-compose.yml:ro
            - ../oms-serviceregistry:/usr/src/app
            - shared:/usr/src/shared
            - strapstate:/usr/scripts/strapstate:ro

### OMS CORE        #######################################
### Applications Code Container #############################

    omscore-data:
        image: tianon/true
        volumes:
            - "../oms-core:/var/www"
            - shared:/var/shared

### Workspace Utilities Container ###########################

    omscore:
        image: aegee/omscore:dev
        volumes_from:
            - omscore-data


### PHP-FPM Container #######################################

    php-fpm:
        image: aegee/php-fpm:dev
        volumes_from:
            - omscore-data
        expose:
            - "9000"

### Nginx Server Container ##################################

    omscore-nginx:
        image: aegee/omscore-nginx:dev
        volumes_from:
            - omscore-data
        volumes:
            - ./logs/omscore/:/var/log/nginx
        links:
            - php-fpm
        expose:
            - 80
        labels:
            - "traefik.backend=omscore"
            - "traefik.port=80"
            - "traefik.frontend.rule=Host:localhost"
            - "traefik.frontend.priority=10"
            - "traefik.enable=true"
            - "registry.categories=(users, 10);(antennae, 10);(notifications, 0)"
            - "registry.backend=/api"
            - "registry.description=The core module with both backend and frontend"

### PostgreSQL Container ####################################

    postgres:
        image: postgres:latest
        volumes:
            - postgres:/var/lib/postgresql/data
        expose:
            - "5432"
        environment:
            POSTGRES_DB: homestead
            POSTGRES_USER: homestead
            POSTGRES_PASSWORD: secret

### pgAdmin Container #######################################

    pgadmin:
        image: fenglc/pgadmin4
        ports:
            - "8081:5050"
        links:
            - postgres

### OMS EVENTS        #######################################
### mongodb Container #######################################

    mongodb:
        image: mongo:latest
        expose:
            - "27017"
        volumes:
            - mongodb:/data/db

### mongoui Container #######################################

    mongoui:
        image: aegee/mongoui:dev
        ports:
            - "8082:3000"
        links:
            - mongodb

### Omsevents backend #######################################

    omsevents:
        image: aegee/omsevents:dev
        volumes:
            - omsevents_media:/usr/app/media
            - "../oms-events:/usr/app/oms-events"
            - shared:/usr/shared:ro
            - strapstate:/usr/scripts/strapstate
        links:
            - mongodb
        expose:
            - "8082"
        labels:
            - "traefik.backend=omsevents"
            - "traefik.port=8082"
            - "traefik.frontend.rule=Host:localhost;PathPrefix:/services/omsevents/api;PathPrefixStrip:/services/omsevents/api"
            - "traefik.frontend.priority=110"
            - "traefik.enable=true"
            - "registry.categories=(events, 10);(notifications, 10)"
            - "registry.servicename=omsevents"


### Omsevents frontend #######################################

    omsevents-frontend:
        image: aegee/omsevents-frontend:dev
        volumes:
            - "../oms-events-frontend:/usr/app/frontend:ro"
            - omsevents_media:/usr/app/media
            - ./logs/omsevents-frontend/:/var/log/nginx
        expose:
            - "8083"
        labels:
            - "traefik.frontend.rule=Host:localhost;PathPrefix:/services/omsevents;PathPrefixStrip:/services/omsevents"
            - "traefik.frontend.priority=100"
            - "traefik.port=8083"
            - "traefik.backend=omsevents-frontend"
            - "traefik.enable=true"
            - "registry.modules=/frontend/getModules.json"


### OMS APPLICATIONS           #######################################
### Applications to oms-events #######################################

    omsapplications:
        image: aegee/omsapplications:dev
        volumes:
            - "../oms-applications:/usr/app"
            - shared:/usr/shared:ro
        links:
            - mongodb
        expose:
            - "8085"
        labels:
            - "traefik.backend=omsapplications"
            - "traefik.port=8085"
            - "traefik.frontend.rule=Host:localhost;PathPrefix:/services/omsapplications/api;PathPrefixStrip:/services/omsapplications/api"
            - "traefik.frontend.priority=110"
            - "traefik.enable=true"
            - "registry.categories=(applications, 10);(events_frontend, 10)"
            - "registry.servicename=omsapplications"

### Applications frontend #######################################

    omsapplications-frontend:
        image: aegee/omsapplications:dev
        volumes:
            - "../oms-applications-frontend:/usr/app:ro"
        expose:
            - "8086"
        labels:
            - "traefik.frontend.rule=Host:localhost;PathPrefix:/services/omsapplications;PathPrefixStrip:/services/omsapplications"
            - "traefik.frontend.priority=100"
            - "traefik.port=8086"
            - "traefik.backend=omsapplications-frontend"
            - "traefik.enable=true"
            - "registry.modules=/getModules.json"


### Volumes Setup ###########################################

volumes:
    postgres:
        driver: "local"
    mongodb:
        driver: "local"
    omsevents_media:
        driver: "local"
    shared:
        driver: "local"
    strapstate:
        driver: "local"

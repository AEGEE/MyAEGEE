version: '2'

services:

### OMS TUNNEL        #######################################
### main container, dev version #######################################

    traefik:
        build:
            context: ./traefik
        ports:
            - "80:80"
            - "8080:8080"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik/traefik.toml:/etc/traefik/traefik.toml

### OMS CORE        #######################################
### Applications Code Container #############################

    omscore-data:
        image: tianon/true
        volumes:
            - "../oms-core:/var/www"
            - "./omscore/.env:/root/.env:ro"
            - "./omscore/bootstrap.sh:/root/bootstrap.sh:ro"
            - shared:/var/shared

### Workspace Utilities Container ###########################

    omscore:
        build:
            context: ./omscore
            args:
                - COMPOSER_GLOBAL_INSTALL=false
                - PUID=1000
                - PGID=1000
                - TZ=UTC
        volumes_from:
            - omscore-data
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:10.0.75.1"
        ports:
           - "2222:22"
        tty: true

### PHP-FPM Container #######################################

    php-fpm:
        build:
            context: ./php-fpm
            args:
                - INSTALL_XDEBUG=false
                - INSTALL_MONGO=false
                - INSTALL_ZIP_ARCHIVE=false
                - INSTALL_MEMCACHED=false
                - INSTALL_OPCACHE=false
                - INSTALL_AEROSPIKE_EXTENSION=false
                - CODEIGNITER=false
            dockerfile: Dockerfile-70
        volumes_from:
            - omscore-data
        expose:
            - "9000"
        links:
            - omscore
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:10.0.75.1"
        environment:
            # IMPORTANT: Set the Remote Interpreter entry matching name to `laravel`
            - PHP_IDE_CONFIG=serverName=laravel

### Nginx Server Container ##################################

    omscore-nginx:
        build:
            context: ./omscore-nginx
            args:
                - PHP_UPSTREAM=php-fpm
        volumes_from:
            - omscore-data
        volumes:
            - ./logs/omscore/:/var/log/nginx
        links:
            - php-fpm
        expose:
            - 80
        labels:
            - "traefik.backend=omscore"
            - "traefik.port=80"
            - "traefik.frontend.rule=Host:localhost"
            - "traefik.frontend.priority=10"
            - "traefik.enable=true"


### Bootstrapper ##################################

    omscore-bootstrap:
        build:
            context: ./omscore
            args:
                - COMPOSER_GLOBAL_INSTALL=false
                - PUID=1000
                - PGID=1000
                - TZ=UTC
        volumes_from:
            - omscore-data
        volumes:
           - strapstate:/root/strapstate
        links:
            - omscore
        extra_hosts:
            # IMPORTANT: Replace with your Docker Host IP (will be appended to /etc/hosts)
            - "dockerhost:10.0.75.1"
        environment:
            # IMPORTANT: Set the Remote Interpreter entry matching name to `laravel`
            - PHP_IDE_CONFIG=serverName=laravel
        command: sh /root/bootstrap.sh

### PostgreSQL Container ####################################

    postgres:
        build: ./postgres
        volumes:
            - postgres:/var/lib/postgresql/data
        expose:
            - "5432"
        environment:
            POSTGRES_DB: homestead
            POSTGRES_USER: homestead
            POSTGRES_PASSWORD: secret

### pgAdmin Container #######################################

    pgadmin:
        build: ./pgadmin
        ports:
            - "5050:5050"
        links:
            - postgres

### OMS EVENTS        #######################################
### mongodb Container #######################################

    mongodb:
        build: ./mongo
        ports:
            - "27017:27017"
        volumes:
            - mongodb:/data/db

### mongoui Container #######################################

    mongoui:
        build: ./mongoui
        ports:
            - "3000:3000"
        links:
            - mongodb

### Omsevents backend #######################################

    omsevents:
        build:
            context: ./omsevents
        volumes:
            - omsevents_media:/usr/app/media
            - "../oms-events:/usr/app/oms-events"
            - shared:/usr/shared:ro
            - "./omsevents/bootstrap.sh:/usr/scripts/bootstrap.sh:ro"
            - "./omsevents/configFile.json:/usr/scripts/configFile.json:ro"
            - strapstate:/usr/scripts/strapstate
        links:
            - mongodb
        labels:
            - "traefik.backend=omsevents"
            - "traefik.port=8082"
            - "traefik.frontend.rule=Host:localhost;PathPrefix:/omsevents/api;PathPrefixStrip:/omsevents/api"
            - "traefik.frontend.priority=110"
            - "traefik.enable=true"


### Omsevents frontend #######################################

    omsevents-frontend:
        build:
            context: ./omsevents-frontend
        volumes:
            - "../oms-events-frontend:/usr/app/frontend:ro"
            - omsevents_media:/usr/app/media
            - ./logs/omsevents-frontend/:/var/log/nginx
        links:
            - omsevents
        labels:
            - "traefik.frontend.rule=Host:localhost;PathPrefix:/omsevents;PathPrefixStrip:/omsevents"
            - "traefik.frontend.priority=100"
            - "traefik.port=8083"
            - "traefik.backend=omsevents-frontend"
            - "traefik.enable=true"


### Bootstrapper frontend #######################################

    omsevents-bootstrap:
        build:
            context: ./omsevents
        volumes_from:
            - omsevents
        links:
            - omsevents
        command: sh /usr/scripts/bootstrap.sh


### Volumes Setup ###########################################

volumes:
    postgres:
        driver: "local"
    mongodb:
        driver: "local"
    omsevents_media:
        driver: "local"
    shared:
        driver: "local"
    strapstate:
        driver: "local"


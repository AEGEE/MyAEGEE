server {
    listen 8083;
    server_name omsevents-frontend;
    root "/usr/app";


    index index.html index.htm;

    charset utf-8;

    # Proxy the api out, so they are both on the same port (Same domain policy wants that)
    location /api/ {
        proxy_pass http://omsevents:8082/;

        # Needed as ui-router mysteriously querys /api on page load... whyever.
        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "http://localhost:8000";
                add_header Access-Control-Allow-Methods "POST, PUT, GET, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "X-Auth-Token, Content-Type";
                return 200;
        }
    }

    # Serve frontend files
    location /frontend/ {
        expires off;
        sendfile off;

        # Allow CORS as UI-router is dynamically loading our template from another origin
        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "X-Auth-Token";
                return 200;
        }
        add_header Access-Control-Allow-Origin "*";
    }

    # Needed as ui-router mysteriously querys / on page load... whyever.
    location / {
        if ($request_method = OPTIONS ) {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "X-Auth-Token";
                return 200;
        }
        add_header Access-Control-Allow-Origin "*";
        return 200;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    access_log off;
    error_log  /var/log/nginx/omsevents-error.log error;

    sendfile off;

    client_max_body_size 100m;
}

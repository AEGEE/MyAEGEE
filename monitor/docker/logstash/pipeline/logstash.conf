input {
  tcp {
    port => 5000
    codec => json
  }
  udp {
    port => 5000
    codec => json
  }
  beats {
    port => 5044
    add_field => { "x_input_type" => "beat" }
  }
}

## Add your filters / logstash plugins configuration here
filter {

  # prune {
  #     whitelist_names => [ "timestamp", "msg", "message", "loglevel", "docker", "stream", "tags", "statuscode", "method", "type" ]
  # }

  ## From logstash: traefik/nginx logs in nginx format
  if [docker][image] =~ "traefik" or [docker][image] =~ "nginx" or [docker][image] =~ "frontend" {
    grok {
      match => { "message" => ["%{IPORHOST:[remote_ip]} - %{DATA:[user_name]} \[%{HTTPDATE:[time]}\] \"%{WORD:[method]} %{DATA:[url]} HTTP/%{NUMBER:[http_version]}\" %{NUMBER:[response_code]} %{NUMBER:[body_sent][bytes]} \"%{DATA:[referrer]}\" \"%{DATA:[agent]}\""] }
      remove_field => [ "message", "[time]" ]
      add_tag => ["access-log"]
    }
    useragent {
      source => "[agent]"
      target => "[user_agent]"
      remove_field => "[agent]"
    }
    geoip {
      source => "[remote_ip]"
      target => "[geoip]"
    }
    translate {
      field => "[response_code]"
      destination => "[x_http_response]"
      dictionary => {
        "200" => "200 OK"
        "201" => "201 Created"
        "403" => "403 Forbidden"
        "404" => "404 Not Found"
        "408" => "408 Request Timeout"
      }
    }
  }

  ## From filebeat: backup log
  if "backup_log" in [tags] { #WORKS!!!
    grok{
      match => { message => [
          "%{HTTPDATE:time} -- \[%{LOGLEVEL:loglevel}\] -- -- %{GREEDYDATA:msg}"
      ] }
    }
  }

  ## From logspout: (pre-made)containers' output
  if [docker][image] =~ "traefik" {
    kv { remove_field => [ "time", "message" ] }
    #   mutate{ add_field => { "traefik_log_type" => "traefik_log" } }
  }

  if [docker][image] =~ "logspout"{
    if "message" =~ /^#/ { #remove initial comments
        drop{}
    }
  }

  ## From applications: not logging requests to healthchecks or metrics.
  if [url] =~ "/healthcheck" or [url] =~ "/metrics" {
    drop {}
  }

  if [docker][image] =~ "portainer"{
    dissect{
        mapping => { "message" => "%{} %{} %{msg}" }
        remove_field => "message"
    }
  }

  # From logspout: apps bunyan logs.
  # The : at the end of each container is because we have "oms-statutory-static" and "oms-events-static".
  if [docker][image] =~ "core:" or [docker][image] =~ "events:" or [docker][image] =~ "statutory:" or [docker][image] =~ "discounts:" or [docker][image] =~ "network:"  or [docker][image] =~ "summeruniversity:" or [docker][image] =~ "knowledge:" {
    mutate { add_tag => ["bunyan-log"] }
  }
}

output {
  if "access-log" in [tags] {
    elasticsearch {
      hosts => "${ELASTIC_HOST}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      index => "access-log-%{+YYYY.MM.dd}"
    }
  }
  else if "bunyan-log" in [tags] {
    elasticsearch {
      hosts => "${ELASTIC_HOST}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      index => "bunyan-log-%{+YYYY.MM.dd}"
    }
  }
  else {
    elasticsearch {
      hosts => "${ELASTIC_HOST}"
      user => "${ELASTIC_USER}"
      password => "${ELASTIC_PASSWORD}"
      index => "other-log-%{+YYYY.MM.dd}"
    }
  }
}

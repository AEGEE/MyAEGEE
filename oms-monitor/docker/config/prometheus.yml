# my global config
global:
  scrape_interval:     60s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 60s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'oms-monitor'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'local-diagnostics'
    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.
    static_configs:
      - targets: ['traefik:8080', 'cadvisor:8080', 'upmonitor:3000']

  - job_name: 'local-node'
    # since we put the network_mode = host
    # we can't access directly anymore. Only through reverse proxy
    static_configs:
      - targets: ['traefik:8080'] #???? 80 redirects to 443, 443 gets error, 8080??. TODO: make special route on http
    metrics_path: '/services/node-exporter/metrics'

  # - job_name: 'blackbox'
  #   metrics_path: /probe
  #   params:
  #     module: [http_2xx]  # Look for a HTTP 200 response.
  #   static_configs:
  #     - targets:
  #       - http://my.staging.aegee.eu    # Target to probe with http.
  #       - https://my.aegee.eu   # Target to probe with https.
  #       - http://example.com:8080 # Target to probe with http on port 8080.
  #   relabel_configs:
  #     - source_labels: [__address__]
  #       target_label: __param_target
  #     - source_labels: [__param_target]
  #       target_label: instance
  #     - target_label: __address__
  #       replacement: blackbox-exporter:9115  # The blackbox exporter's real hostname:port.

  - job_name: 'staging-diagnostics'
    static_configs:
      - targets: ['my.staging.aegee.eu']
    metrics_path: '/services/node-exporter/metrics'

  - job_name: 'production-diagnostics'
    static_configs:
      - targets: ['my.aegee.eu']
    metrics_path: '/services/node-exporter/metrics'

  # - job_name: 'production-traefik' # READ: https://docs.traefik.io/v1.7/configuration/api/#security
  #   static_configs:
  #     - targets: ['traefik.aegee.eu'] # it's better to put a /path instead of a subdomain because we don't have access to AEGEE DNS

  - job_name: 'commander-diagnostics'
    static_configs:
      - targets: ['commander.aegee.eu']
    metrics_path: '/services/node-exporter/metrics'

  # - job_name: 'monitor2-diagnostics'
  #   static_configs:
  #     - targets: ['monitor2.aegee.eu']
  #   metrics_path: '/services/node-exporter/metrics'

  # Scraping also production stuff (ONLY FROM MONITORING HOST)
  - job_name: 'statutory-statistics'
    static_configs:
      - targets: ['my.aegee.eu']
    metrics_path: '/services/oms-statutory/api/metrics'
  - job_name: 'statutory-metrics'
    static_configs:
      - targets: ['my.aegee.eu']
    scrape_interval: 10s
    metrics_path: '/services/oms-statutory/api/metrics/requests'
  - job_name: 'events-statistics'
    static_configs:
      - targets: ['my.aegee.eu']
    metrics_path: '/services/oms-events/api/metrics'
  - job_name: 'events-metrics'
    static_configs:
      - targets: ['my.aegee.eu']
    scrape_interval: 10s
    metrics_path: '/services/oms-events/api/metrics/requests'
  - job_name: 'discounts-statistics'
    static_configs:
      - targets: ['my.aegee.eu']
    metrics_path: '/services/oms-discounts/api/metrics'
  - job_name: 'discounts-metrics'
    static_configs:
      - targets: ['my.aegee.eu']
    scrape_interval: 10s
    metrics_path: '/services/oms-discounts/api/metrics/requests'

#TODO: learn prometheus and put all in one, e.g.
  # - job_name: 'discounts-metrics'
  #     static_configs:
  #       - targets: ['my.aegee.eu', 'my.staging.aegee.eu']
  #     scrape_interval: 10s
  #     metrics_path: '/services/oms-discounts/api/metrics/requests'

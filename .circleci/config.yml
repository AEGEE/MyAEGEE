orbs:
  slack: circleci/slack@3.4.2 # FIXME update to v4
  node: circleci/node@4.2.0
  shellcheck: circleci/shellcheck@2.2.2
  docker: circleci/docker@1.5.0
version: 2.1
jobs:
  test:
    machine:
      image: ubuntu-2004:202101-01
    steps:
      - checkout
      - run: docker run --name postgres -e POSTGRES_PASSWORD='5ecr3t' -p 5432:5432 -d postgres:10.16
      - run:
          name: Install Node
          command: |
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            nvm install v14.16.0
            nvm alias default v14.16.0
      - node/install-packages
      - run: mkdir -p ~/reports/jest
      - run:
          name: Run tests
          command: JEST_JUNIT_OUTPUT_DIR=$HOME/reports/jest npm test -- --reporters=default --reporters=jest-junit
      - run: ./node_modules/.bin/codecov
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports
  build:
    docker:
      - image: cimg/base:2021.03
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - run: docker-compose -f docker/docker-compose.yml -f docker/docker-compose.dev.yml build --no-cache core
  eslint:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout
      - node/install-packages
      - run: mkdir -p ~/reports
      - run: npm run lint -- --format junit --output-file ~/reports/eslint.xml
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports
  yamllint:
    docker:
      - image: cimg/python:3.9.2
    steps:
      - checkout
      - run: pip install yamllint
      - run: yamllint -d .yamllint.yml .
  shellcheck:
    docker:
      - image: cimg/base:2021.03
    steps:
      - checkout
      - shellcheck/install
      - shellcheck/check
  audit:
    docker:
      - image: cimg/node:14.16.0
    steps:
      - checkout
      - run: npm audit --production
      - slack/status:
          fail_only: true
          failure_message: The audit check for \`$CIRCLE_PROJECT_REPONAME\` has failed.
  docker-build-and-push:
    docker:
      - image: cimg/node:16.13.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.2
      - node/install-packages
      - run: npx semantic-release
      - run: docker build  --tag aegee/core:$(node -p "require('./package.json').version") --tag aegee/core:latest -f docker/core/Dockerfile .
      - run: docker login --username $DOCKER_LOGIN --password $DOCKER_PASSWORD
      - run: docker push aegee/core:$(node -p "require('./package.json').version")
      - run: docker push aegee/core:latest
      - slack/status:
          success_message: The Docker image for \`$CIRCLE_PROJECT_REPONAME\` with tags \`$(node -p "require('./package.json').version")\` and \`latest\` has been pushed to Dockerhub.
          failure_message: The Docker image for \`$CIRCLE_PROJECT_REPONAME\` build and push has failed.

workflows:
  version: 2
  linters:
    jobs:
      - eslint
      - yamllint
      - shellcheck
      - docker/hadolint:
          dockerfiles: $(find . -name '*Dockerfile*')
  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
  test:
    jobs:
      - test
  docker-build-and-push:
    jobs:
      - docker-build-and-push:
          filters:
            branches:
              only: master
  audit:
    triggers:
      - schedule:
          cron: "0 0 * * 5"
          filters:
            branches:
              only: master
    jobs:
      - audit
